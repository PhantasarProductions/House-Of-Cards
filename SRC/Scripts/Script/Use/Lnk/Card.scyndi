// License Information:
// House Of Cards
// Card Linker
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.03.23
// End License Information

Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/Graphics"

#use "Script/Use/Gen/Config"

Const Int Width  = 368
Const Int Height = 500


Get Int CardWidth;  Return Width; End
Get Int CardHeight; Return Height; End

plua _backsides


Void _LoadC()
	Sys.LoadNewState("SUB_CARD","Script/Subs/Sub_Card.lbc")
End

Void LoadDeckCards(string DeckFile)
	_LoadC()
	Sys.Call("SUB_CARD","LoadDeckPics", DeckFile)
End

Get Var BackSide
	string T;T = "BACKSIDE::"..Upper(Config.BackSide)
	_backsides = _backsides || {}
	_backsides[T] = _backsides[T] || LoadNewImage(Config.BackSide,T)
	return _backsides[T]
End

// Draw Deck
Class DDeck
	ReadOnly Var Sz
	ReadOnly String DeckFile
	ReadOnly String BackSideName
	ReadOnly Var Back
	Get Int W; return sz.W; End
	Get Int H; return sz.H; End
	Constructor(_Sz,string _Deck,string _BackSide = "" )
		Sz=_Sz
		If _Deck=="*"
			DeckFile = Config.GlobDeck
		Else
			DeckFile = _Deck
		End
		LoadDeckCards(DeckFile)
		If _BackSide!=""
			BackSideName = _BackSide
		Else
			BackSideName = Config.BackSide
		End
		string T;T = "BACKSIDE::"..Upper(BackSideName)
		Back = LoadNewImage(BackSideName,T)
	End
	
	Void DrawBack(Int X, Int Y)
		SetColor(255,255,255,255)
		If !Back
			SetColor(math.random(0,255),math.random(0,255),math.random(0,255))
			Rect(X,Y,Sz.W,Sz.H)
			SetColor(255,255,255,255)
		Else
			Back.Stretch(X,Y,Sz.W,Sz.H)
		End
	End
	
	Void DrawCard(Int X, Int Y,Int Suit, Int Value)
		_LoadC()
		Sys.Call("SUB_CARD","DrawDeckPic",DeckFile, X,Y,Sz.W, Sz.H, Suit,Value)
	End
End

// Size
Class CardSize
	ReadOnly Int W
	ReadOnly Int H
	ReadOnly Var Me
		
	Get Int Height; Return Me.H; End
	Get Int Width;  Return Me.W; End

	Constructor (Int _W,Int _H)
		W = _W
		H = _H
		Me = Self
		CSayF("Card size record created %03dx%03d",_W,_H)
	End

	Static Var FromW(Int _W)
		Int _H
		_H = math.floor( CardHeight * (_W / CardWidth ) )
		Return New CardSize(_W,_H)
	End

	Static Var FromH(Int _H)
		Int _W
		_W = math.floor( CardWidth * (_H / CardHeight) )
		Return New CardSize(_W,_H)
	End
	
	Var Bind(String _Deck="*")
		Return New DDeck(Self,_Deck)
	End
End