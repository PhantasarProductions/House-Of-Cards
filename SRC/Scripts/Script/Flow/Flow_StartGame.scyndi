// License Information:
// House Of Cards
// Game Starter
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.02.29
// End License Information
Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/JCR6"
#use "Libs/SCI/GINIE"
#use "Libs/SCI/Events"
#use "Libs/SCI/SString"
#use "Libs/SCI/Graphics"

#use "Libs/Rosetta"

#use "Script/Use/Gen/Muis"
#use "Script/Use/Gen/RText"
#use "Script/Use/Gen/Config"

Bool Always(); Return True; End

#region "Shuffle Selector"
Void ShuffleAct(Item,Parent)
End

String ShuffleVal(Item,Parent)
	Parent.Config.NewValue("Shuffle","Shuffle","Random")
	Return Parent.Config.Value("Shuffle","Shuffle")
End
#endregion


#region Items
Class CfgItem
	ReadOnly Var Parent
	ReadOnly Delegate Action
	ReadOnly Delegate _Allow
	ReadOnly Delegate _Value
	ReadOnly String _RosCat
	ReadOnly String _RosVal
	ReadOnly String ConfigKey
	Get Bool Allow; Return _Allow(Self,Parent); End
	Get String Value; Return _Value(Self,Parent); End
	Get String Caption
		String Ret;Ret = Rosetta.GetStr(_RosCat,_RosVal) 
		If Ret == ""; Return ConfigKey; End
		Return Ret
	End
	Constructor(_Ouwe,String _ConfigKey, String _RCat,String _RVal,_Act,_Val,_All)
		Parent    = _Ouwe
		_RosCat   = _RCat
		_RosVal   = _RVal
		Action    = _Act
		_Value    = _Val
		_Allow    = _All || Always
		ConfigKey = _ConfigKey
	End		
End
#endregion

#region "Game Data"
String CurrentID = ""
ReadOnly Var Logo = ObtainImage("LOGO")

Class GameRecord
	Static Var Current

	ReadOnly String ID
	ReadOnly Var Raw
	ReadOnly Var Banner
	ReadOnly Table ConfigItems
	ReadOnly Var Config
		
	Constructor(string GID)
		CSayF("Creating Game Data Record: %s",GID)
		ID = Upper(GID)
		Raw = GINIE.LoadNew(sprintf("Script/Game/%s/GameID.ini",GID),sprintf("GAME::%s",ID))
		If Raw.Value("Meta","Banner")==""
			Banner = Logo
		Else
			Banner = LoadImage(Raw.Value("Meta","Banner"),sprintf("BANNER::%s",ID))
			Banner.Hot(Banner.Width div 2,0)
		End
		String CfgFile; CfgFile = SPRINTF("House Of Cards.GameConfig.%s.ini",ID)
		Config = GINIE.LoadHome(CfgFile,sprintf("CONFIG::%s",ID),CfgFile,sprintf("House Of Cards - (c) Jeroen P. Broks\nConfiguration for: %s",GID))
		ConfigItems = {}
		ConfigItems[0] = new CfgItem(Self,"*SHUFFLE*","STARTGAME_GLOBAL","SHUFFLE",ShuffleAct,ShuffleVal)
	End
End

plua _d
QuickMeta GameData
	index		
		_d = _d || {}
		Key = Upper(Key)
		_d[Key] = _d[Key] || new GameRecord(key)
		Return _d[Key]
	End
	
	NewIndex
		Lua.error("GameData Read Only")
	End
End		
#endregion

#region "Bottom buttons"
Bool AllowContinue(); Return False; End
Void Cancel(); End
Void Continue(); End
Void NewGame(); End
Class BB
	Static Int N = 0
	Static Var But = {}
	Static Var BW
		
	ReadOnly Delegate Allow
	ReadOnly Delegate Action
	ReadOnly String Caption
	Constructor(String C,Ac,Al)
		N++
		Caption=C
		Action=Ac
		Allow=Al || Always
		BW = Graphics.Width Div n		
	End	
End
Init
	BB.But[0] = new BB("CANCEL",Cancel)
	BB.But[1] = new BB("CONTINUE",Continue,AllowContinue)
	BB.But[2] = new BB("NEWGAME",NewGame)
End
#endregion


#region Callbacks
Global Void AcceptGame(String GID)
	CurrentID = GID
	CSayF("Game Starter now uses Game ID: %s",GID)
	GameRecord.Current = GameData[GID]
End


Int Hue = os.time()
ReadOnly Var Fnt  = ObtainFont("RYANNA")

// Not expected to be needed, but held here just in case	
Int ScrollY = 0	
Global Void MainFlow()
	Hue = (Hue+1)%360
	If Events.AppTerminate(); Sys.Exit(); End
	SetColor(255,255,255)
	DrawBackground()
	GameRecord.Current.Banner.Draw(Graphics.Width div 2,20)
	
	// Config settings
	For i,v in ipairs(GameRecord.Current.ConfigItems)
		Int PY; PY = i - ScrollY
		Int Y;  Y = (PY*30)+200		
		If PY>=0 && Y<Graphics.Height-90
			If MY>Y && Y<Y+30
				SetColorHSV(Hue,1,0.5)
				Rect(0,Y,Graphics.Width,30)
			End
			SetColor(255,255,255); Fnt.Text(v.Caption,(Graphics.Width Div 2)-5,Y,1)
			SetColor(255,180,  0); Fnt.Text(v.Value,(Graphics.Width Div 2)+5,Y)
		End
	End
	
	
	// Bottom Buttons
	For i,v In iPairs(BB.But)
		String CP;CP = Rosetta.GetStr("ALGEMEEN",v.Caption)
		Int BX       = BB.BW*i
		int X;    X  = BX + (BB.BW div 2)
		SetColor(255,180,0)
		Fnt.Text(CP,X,Graphics.Height-60,2)
	End
	ShowMouse()
End
#endregion