// License Information:
// House Of Cards
// Game Starter
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.03.16
// End License Information

Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/JCR6"
#use "Libs/SCI/GINIE"
#use "Libs/SCI/SGJCR"
#use "Libs/SCI/Events"
#use "Libs/SCI/SString"
#use "Libs/SCI/Graphics"

#use "Libs/Rosetta"

#use "Script/Use/Gen/Muis"
#use "Script/Use/Gen/RText"
#use "Script/Use/Gen/Config"

ReadOnly Var Mini = ObtainFont("MINI")

String SaveFile
Bool SaveFound
Bool Always(); Return True; End

#region "Shuffle Selector"
Plua Shuffles = {}
plua ShuffleIdx = {} 
Void ShuffleAct(Item,Parent)
	ShuffleIdx[Parent.TID] = ( (ShuffleIdx[Parent.TID] || 0) + 1) % len(Shuffles[Parent.TID] || "1")
	Parent.Config.Value("Shuffle","Shuffle",Shuffles[Parent.TID][ShuffleIdx[Parent.TID]])
End

String ShuffleVal(Item,Parent)
	If Parent.Raw.Value("Shuffle","Default")!="" 
		Parent.Config.NewValue("Shuffle","Shuffle","Random",Parent.Raw.Value("Shuffles","Default"))
	Else
		Parent.Config.NewValue("Shuffle","Shuffle","Random")
	End	
	if (!Shuffles[Parent.TID])
		Shuffles[Parent.TID] = {[0]="Random" }
		For sh in Each(Parent.Raw.List("Shuffles","Shuffles"))
			If sh==Parent.Config.Value("Shuffle","Shuffle"); ShuffleIdx[Parent.TID]=Len(Shuffles[Parent.TID]); End
			Shuffles[Parent.TID][len(Shuffles[Parent.TID])]=sh
			CSayF("Shuffle '%s' added to %s",sh,Parent.TID)
		End
	End
	Return Parent.Config.Value("Shuffle","Shuffle")
End
#endregion

String RandomItemValue(Item,Parent,String Key)
	Return Parent.Config.Value("Config",Item.ConfigKey)
End


Void RandomItemAct(Item,Parent)
	Int Keuze
	For I,V in Pairs(Item.Answers)
		If V==Parent.Config.Value("Config",Item.ConfigKey)
			Keuze = (I+1) % Len(Item.Answers)
		End
	End
	Parent.Config.Value("Config",Item.ConfigKey,Item.Answers[Keuze])
End


Bool RandomItemAllow(Item,Parent)
	return Len(Item.Answers)>0
End

#region Items
Class CfgItem
	// "Me" is only there because the compiler has a but with "self" in properties, that I really need to address.
	ReadOnly Var Me
	ReadOnly Var Parent
	ReadOnly Delegate Action
	ReadOnly Delegate _Allow
	ReadOnly Delegate _Value
	ReadOnly String _RosCat
	ReadOnly String _RosVal
	ReadOnly String ConfigKey
	ReadOnly Table Answers = {}
	Get Bool Allow; Return _Allow(Me,Parent); End
	Get String Value; Return _Value(Me,Parent,ConfigKey); End
	Get String Caption
		//Var This = Self
		String Ret;Ret = Rosetta.GetStr(_RosCat,_RosVal) 
		If Ret == ""; Return ConfigKey; End
		Return Ret
	End
	Constructor(_Ouwe,String _ConfigKey, String _RCat,String _RVal,_Act,_Val,_All,_Answers)
		Parent    = _Ouwe
		_RosCat   = _RCat
		_RosVal   = _RVal
		Action    = _Act
		_Value    = _Val
		_Allow    = _All || Always
		ConfigKey = _ConfigKey
		Answers   = _Answers
		Me        = Self
	End		
End
#endregion

#region "Game Data"
String CurrentID = ""
ReadOnly Var Logo = ObtainImage("LOGO")

Class GameRecord
	Static Var Current

	ReadOnly String ID
	ReadOnly String TID
	ReadOnly Var Raw
	ReadOnly Var Banner
	ReadOnly Table ConfigItems
	ReadOnly Var Config
	Static Delegate ASC = Lua.string.byte
	ReadOnly Var Me
	
	Get String DevStage
		String Ret;Ret = Me.Raw.Value("Development","Status")
		if Ret==""; Return "WIP"; End
		Return Ret
	End
	
	Get Bool DebugOnly
		Return Upper(Raw.Value("Development","Ready"))!="YES"
	End
		
	Constructor(string GID)
		Me = Self
		CSayF("Creating Game Data Record: %s",GID)
		ID = Upper(GID)
		TID = ""
		For i=1,Len(GID)
			Plua IGID;IGID = ASC(Mid(GID,i,1))
			If (IGID>='A' && IGID<='Z') || (IGID>='0' && IGID<='0')
				TID = TID .. Chr(IGID)
			End
		End
		Raw = GINIE.LoadNew(sprintf("Script/Game/%s/GameID.ini",GID),sprintf("GAME::%s",ID))
		If Raw.Value("Meta","Banner")==""
			Banner = Logo
		Else
			Banner = LoadImage(Raw.Value("Meta","Banner"),sprintf("BANNER::%s",ID))
			Banner.Hot(Banner.Width div 2,0)
		End
		String CfgFile; CfgFile = SPRINTF("House Of Cards.GameConfig.%s.ini",ID)
		Config = GINIE.LoadHome(CfgFile,sprintf("CONFIG::%s",ID),CfgFile,sprintf("House Of Cards - (c) Jeroen P. Broks\nConfiguration for: %s",GID))
		ConfigItems = {}
		ConfigItems[0] = new CfgItem(Self,"*SHUFFLE*","STARTGAME_GLOBAL","SHUFFLE",ShuffleAct,ShuffleVal)
		For I in Each(Raw.List("Config","Fields"))
			ConfigItems[Len(ConfigItems)] = new CfgItem(Self,I,"STARTGAME_"..TID,I,RandomItemAct,RandomItemValue,RandomItemAllow,Raw.List("CFG::"..i,"Answers"))
			Config.NewValue("Config",I,Raw.Value("CFG::"..i,"Default"))
		End
	End
End

plua _d
QuickMeta GameData
	index		
		_d = _d || {}
		Key = Upper(Key)
		_d[Key] = _d[Key] || new GameRecord(key)
		Return _d[Key]
	End
	
	NewIndex
		Lua.error("GameData Read Only")
	End
End		
#endregion

#region "Bottom buttons"
Bool AllowContinue(); Return SaveFound; End
Void Cancel(); Sys.CurrentFlow="SELECTGAME"; End
Void Continue(); End

Void NewGame(Rec)
	String G_ID;G_ID = sprintf("FLOW_GAME_%s",Rec.TID)
	Sys.LoadNewState(G_ID,sprintf("Script/Game/%s/Game.lbc",Rec.ID))
	// TODO: Load Shuffle
	Sys.Call(G_ID,"GameNew")
	GoToFlow(sprintf("GAME_%s",Rec.TID))
End

Class BB
	Static Int N = 0
	Static Var But = {}
	Static Var BW
		
	ReadOnly Delegate Allow
	ReadOnly Delegate Action
	ReadOnly String Caption
	Constructor(String C,Ac,Al)
		N++
		Caption=C
		Action=Ac
		Allow=Al || Always
		BW = Graphics.Width Div n		
	End	
End
Init
	BB.But[0] = new BB("CANCEL",Cancel)
	BB.But[1] = new BB("CONTINUE",Continue,AllowContinue)
	BB.But[2] = new BB("NEWGAME",NewGame)
End
#endregion


#region Callbacks
Global Void AcceptGame(String GID)
	CurrentID = GID
	CSayF("Game Starter now uses Game ID: %s",GID)
	GameRecord.Current = GameData[GID]
	SaveFile = sprintf("House Of Cards.SaveGame.%s.jcr",GID)
	SaveFound = SGJCR.Exists(SaveFile)	
	CSayF("= Save game '%s' found -> %s",SaveFile,SaveFound)
End


Int Hue = os.time()
ReadOnly Var Fnt  = ObtainFont("RYANNA")

// Not expected to be needed, but held here just in case	
Int ScrollY = 0	
Global Void MainFlow()
	Hue = (Hue+1)%360
	If Events.AppTerminate(); Sys.Exit(); End
	SetColor(255,255,255)
	DrawBackground()
	GameRecord.Current.Banner.Draw(Graphics.Width div 2,20)
	If GameRecord.Current.DevStage=="WIP"
		SetColor(100,100,100)
		// Slow, but should normally not be visible for regular players anyway
		For i,n in pairs{"Warning!","This game is still a work in progress.","Don't expect it to work properly","(If it works at all)"}
			Mini.Dark(n,Graphics.Width div 2,(Graphics.height div 2) + i*20,2)
		End
	ElIf Upper(GameRecord.Current.DevStage)!="STABLE"
		Mini.Dark("Development Status: "..GameRecord.Current.DevStage,Graphics.Width div 2,(Graphics.height div 2),2,2)
	End
	If GameRecord.Current.DebugOnly
		If !Sys.DebugBuild
			Sys.Annoy("I am very sorry, but this particular game\nis still in a too premture state\nof development.\n\nPlease wait for a later version\n\nof \"House of Cards\".")
			Sys.CurrentFlow="SELECTGAME"
		End
		Mini.Dark("DEBUG ONLY!",Graphics.Width div 2,(Graphics.height)-90,2,1)
	End	
	// Config settings
	For i,v in ipairs(GameRecord.Current.ConfigItems)
		Int PY; PY = i - ScrollY
		Int Y;  Y = (PY*30)+200		
		If PY>=0 && Y<Graphics.Height-90
			If v.Allow				
				If MY>Y && MY<Y+30
					SetColorHSV(Hue,1,0.5)
					Rect(0,Y,Graphics.Width,30)
					IF ML
						v.Action(v,v.Parent)
					End							
				End
					SetColor(255,255,255); Fnt.Text(v.Caption,(Graphics.Width Div 2)-5,Y,1)
					SetColor(255,180,  0); Fnt.Text(v.Value,(Graphics.Width Div 2)+5,Y)
			Else
				SetColor(155,155,155); Fnt.Text(v.Caption,(Graphics.Width Div 2)-5,Y,1)
			End
		End
	End
	
	
	// Bottom Buttons
	For i,v In iPairs(BB.But)
		String CP;CP = Rosetta.GetStr("ALGEMEEN",v.Caption)
		Int BX       = BB.BW*i
		int X;    X  = BX + (BB.BW div 2)
		Int RW;   RW = Fnt.Width(CP)
		int RX;   RX = X - (RW Div 2)
		If v.Allow()
			If MY>Graphics.Height-60 && MX>RX && MX<RX+RW
				SetColorHSV(Hue,1,0.5)
				Rect(RX,Graphics.Height-60,RW,30)
				If ML
					v.Action(GameRecord.Current)
				End
			End
			SetColor(255,180,0)
			Fnt.Text(CP,X,Graphics.Height-60,2)			
		ENd
		
		
	End
	ShowMouse()
End
#endregion