// License Information:
// House of Cards
// Spider
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.03.11
// End License Information

Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/GINIE"
#use "Libs/SCI/SGJCR"
#use "Libs/SCI/Graphics"

//#use "Libs/xMath"
//#use "Libs/Stacker"

#use "Script/Use/Lnk/Deck"
#use "Script/Use/Lnk/Card"

#use "Script/Use/Gen/Muis"
#use "Script/Use/Gen/Sound"
#use "Script/Use/Gen/RText"
#use "Script/Use/Gen/Config"
#use "Script/Use/Gen/GameFeatures"

#Region "Base Configuration"
Const Int Rows = 10
Const Int Packages = 5
QuickMeta BaseCardsInRow
	NewIndex;Lua.error("Nope!");End
	Index;if Key<4; Return 6; else; Return 5; End; End // Top Card included
End
#endregion



#region Assets
ReadOnly Var Fnt  = ObtainFont("RYANNA")
ReadOnly Var ESC  = ObtainImage("SUCCESS")
ReadOnly Var EFL  = ObtainImage("FAIL")
ReadOnly Var UND  = ObtainImage("UNDO")
ReadOnly Var ICO  = LoadNewImage("Script/Game/Spider/Icon.png","SPIDER_ICON")
ReadOnly Var OKE  = ObtainImage("OK")
	
Int Hue = os.time()
#endregion

#region "Game Variables"
Plua CardSize = Lua.Scyndi.Class.CardSize
PLUA SPI_Deck
plua SPI_CardSize = CardSize.FromW(Graphics.Width div (Rows+1))
Int SPI_Score
#endregion

#region Configration
plua SPI_Config = GINIE.Obtain("CONFIG::SPIDER")
Get Int Suits; Return SPI_Config.IntValue("CONFIG","SUITS"); End

// Will allow to deal an extra package of cards even if some rows are empty.
// That is, when set to 'true' that is.
Get Bool AllowEmpty; Return Upper(SPI_Config.Value("CONFIG","ALLOWEMPTY")=="YES"); End

Get String ShuffleMethod; Return SPI_Config.Value("Shuffle","Shuffle"); End
#endregion
	
#region Icon
Int IconSize = math.min(graphics.width,graphics.height)
Void ShowIcon()
	SetColor(255,255,255,255)
	ICO.Stretch(Graphics.Width-IconSize,Graphics.Height-Iconsize,IconSize,IconSize)
	Iconsize = math.max(64,IconSize-1)
End
#endregion

Int RowX(Int Row)
	return math.floor(((Row*1.06)*SPI_CardSize.W)+(Row div 2))
End

Void RowMarkers()
	For i=0,Rows-1
		SetColor(100,100,100,100)
		Rect(RowX(i),5,SPI_CardSize.W,SPI_CardSize.H)
	End
End

Global Void GameNew(String CShuffle="")
	SPI_Score = 500
	GameFeatures.ShuffleTag="DECK_Spider"
	If CShuffle!=""
		Lua.error("Loading shuffles not yet supported")
	Else		
		Switch Suits
		Case 1
			SPI_Deck = Deck.Shuffle("DECK_Spider",ShuffleMethod,1, 13, 8,1)
		Case 2
			SPI_Deck = Deck.Shuffle("DECK_Spider",ShuffleMethod,1, 13, 4,2)
		Default
			SPI_Deck = Deck.Shuffle("DECK_Spider",ShuffleMethod,1, 13, 2,4)
		End
	End
End

Global Void MainFlow()
	hue = (hue+1)%360
	SetColor(255,255,255,255)
	DrawBackground()
	RowMarkers()
	ShowIcon()
	ShowMouse()
End