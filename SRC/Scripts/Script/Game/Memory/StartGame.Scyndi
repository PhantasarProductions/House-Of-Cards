// License:
// 
// House Of Cards
// Memory - Start Game
// 
// 
// 
// 	(c) Jeroen P. Broks, 2024
// 
// 		This program is free software: you can redistribute it and/or modify
// 		it under the terms of the GNU General Public License as published by
// 		the Free Software Foundation, either version 3 of the License, or
// 		(at your option) any later version.
// 
// 		This program is distributed in the hope that it will be useful,
// 		but WITHOUT ANY WARRANTY; without even the implied warranty of
// 		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// 		GNU General Public License for more details.
// 		You should have received a copy of the GNU General Public License
// 		along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// 	Please note that some references to data like pictures or audio, do not automatically
// 	fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.10.10 I
// End License
// License Information:
// House Of Cards
// Memory - Start Game
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.03.24
// End License Information
Module

#use "Libs/SCI/Sys"
#use "Libs/SCI/GINIE"

#use "Script/Game/Memory/Field"
#use "Script/Game/Memory/MemoryCards"

plua GL=Lua.Scyndi.Globals

Global Bool GAMEFEATURES_SAVEEXIT_ALLOW()
	Return False
	//Return !GL.Mem_Won
End	

Global Void GameNew()
	GL.Mem_Score=0
	GL.Mem_Time=0
	GL.Mem_Combo=0
	GL.Mem_RunTime=False
	Gl.MEM_OldTime=os.time()
	GL.Mem_Won=False
	MemoryCards.ConfigField()
	Field.Create(MemoryCards.FldW,MemoryCards.FldH)
	Int Max=MemoryCards.FldW*MemoryCards.FldH
	int CS=math.random(0,3)
	int CV=math.random(1,13)
	For i=1,Max div 2
		for j=1,2
			int r;r=math.random(0,Max-1)
			Int TimeOut=1000
			While Field.IValue(r)>0
				//CSayF("%04d>Trying %d (%02x)",Timeout,r,Field.IValue(r))
				lua.assert(TimeOut>0,"Time Out")
				r = (r+1) % Max
				TimeOut--				
			End
			Field.IPut(r,CS,CV)
			CSayF("%d:Pos:%d; S:%d; V:%d",j,r,CS,CV)			
		End
		CV = CV + 1
		If CV>13
			CV = 1
			CS = (CS + 1) % 4					
		End	
	End
End
