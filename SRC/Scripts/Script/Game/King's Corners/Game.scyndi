// License Information:
// House Of Cards
// King's Corners
// 
// 
// 
// (c) Jeroen P. Broks, 2024
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// 
// Please note that some references to data like pictures or audio, do not automatically
// fall under this licenses. Mostly this is noted in the respective files.
// 
// Version: 24.03.05
// End License Information
Script

#use "Libs/SCI/Sys"
#use "Libs/SCI/GINIE"
#use "Libs/SCI/Graphics"

#use "Libs/xMath"

#use "Script/Use/Lnk/Deck"
#use "Script/Use/Lnk/Card"

#use "Script/Use/Gen/Muis"
#use "Script/Use/Gen/RText"
#use "Script/Use/Gen/Config"

ReadOnly Var Fnt  = ObtainFont("RYANNA")

plua CardSize = Lua.Scyndi.Class.CardSize

plua KC_Card 
plua KC_Deck
plua KC_Config = GINIE.Obtain("CONFIG::KING'S CORNERS")

Class KC_Score
	Static Int _X
	Static Int W
	Static Int HW
	Static Get Int X; Return _X; End
	Static Set Int X
		_X = Value
		W = (Graphics.Width-_X)
		HW = W div 2
	End
	Static Table Tab
	Static Void Reset(); Tab = {}; End	
	ReadOnly Int Mul		
	ReadOnly String Tag
	ReadOnly Var Next
	Static Var First		
	Get Int Num; Return Tab[Tag] || 0; End
	Set Int Num; Tab[Tag]=Value; End
	Get Bool Show; Return Tag=="TOTAL" || Tab[Tag]!=nil; End
	Get Int Total; Return Mul*Num; End
	Get String ShowScore
		If Tag=="TOTAL"
			int d = 0
			For s in Each_Chain(First)
				If s.Tag!="TOTAL"
					d = d + s.Total
				End
			End
			Return sprintf("%4d",d)
		Else
			Return sprintf("%4d (%02d x %02d)",Total,Num,Mul)
		End
	End
	
	Constructor(String _T,Int _M, _N)
		Tag  = upper(_T)
		Mul  = _M
		Next = _N
		CSayF("Created score tag: %s",_T)
	End
	
	Static Void DrawAll()
		Int Y = 5
		For I in Each_Chain(First)
			If I.Show
				SetColor(255,255,255)
				Text("KINGCORNERS",I.Tag,X,Y)
				SetColor(255,180,0)
				Fnt.Text(I.ShowScore,X+HW,Y)
				Y=Y+30
			End
		End
	End
	
End

int Hue = os.time()

Int CardX(Int X); Return 5+(X*(KC_Card.W + 5)); End
Int CardY(Int Y); Return 5+(Y*(KC_Card.H + 5)); End

Void DESpot(X,Y)
	Int A = math.abs(math.floor( xmath.sin(Hue)*200 ) ) + 50
	SetColor(10,10,10)
	SetAlpha(A)
	Rect( CardX(X),CardY(Y),KC_Card.W,KC_Card.H)	
	SetAlpha(255)
End

Void DSpot(X,H)
	DESpot(X,H)
	// TODO: Draw Card if applicable
End


Void DSpots()
	For X,Y in Range2(0,3,0,3)
		// Print(X,Y) // DEBUG ONLY!
		DESpot(X,Y)
	End
End

Void KC_Score_Chain()
	KC_Score.First = KC_Score.First || New KC_Score("CARDSPLAYED",1, New KC_Score("JACKS",2, New KC_Score("QUEENS",3, New KC_Score("ACES",4,New KC_Score("WRONG",-4, New KC_Score("TOTAL",0))))))
End

Init
	KC_Card        = CardSize.FromH(200)	
	KC_Score.X     = CardX(5) 
End

Global Void GameNew(String CShuffle="")
	KC_Score_Chain()
	If CShuffle!=""
		Lua.error("Loading shuffles not yet supported")
	Else
		KC_Deck = Deck.Shuffle("DECK_KINGSCORNERS",KC_Config.Value("Shuffle","Shuffle"))
	End
	KC_Score.Reset()
End

Global Void GameContinue()
	KC_Score_Chain()
End

Global Void MainFlow()
	hue = (hue+1)%360
	SetColor(255,255,255,255)
	DrawBackground()
	DSpots()
	KC_Score.DrawAll()
	ShowMouse()
End